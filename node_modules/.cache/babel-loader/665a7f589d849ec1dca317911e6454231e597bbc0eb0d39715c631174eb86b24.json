{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e236d8c2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"tasks-div\"\n};\nconst _hoisted_2 = [\"onDblclick\"];\nexport function render(_ctx, _cache) {\n  const _component_TaskComponent = _resolveComponent(\"TaskComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      class: _normalizeClass({\n        remember: task.reminder,\n        task\n      }),\n      id: \"task\",\n      onDblclick: $event => _ctx.$emit('toggle', task.id)\n    }, [_createVNode(_component_TaskComponent, {\n      task: task,\n      onDlt: $event => _ctx.$emit('dltd', task.id)\n    }, null, 8 /* PROPS */, [\"task\", \"onDlt\"])], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)), _createTextVNode(\" \" + _toDisplayString(_ctx.remembered), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAW;;;;uBAAtBC,oBAKM,OALNC,UAKM,sBAJFD,oBAEME,6BAFcC,UAAK,EAAbC,IAAI;yBAAhBJ,oBAEM;MAFsBK,GAAG,EAAED,IAAI,CAACE,EAAE;MAAGP,KAAK;QAAAQ,UAAcH,IAAI,CAACI,QAAQ;QAAEJ;MAAI;MAAGE,EAAE,EAAC,MAAM;MAAEG,UAAQ,YAAEN,UAAK,WAAWC,IAAI,CAACE,EAAE;QAC5HI,aAA0DC;MAA1CP,IAAI,EAAEA,IAAI;MAAGQ,KAAG,YAAET,UAAK,SAAQC,IAAI,CAACE,EAAE;;mDACpD,GACN,oBAAGH,eAAU","names":["class","_createElementBlock","_hoisted_1","_Fragment","_ctx","task","key","id","remember","reminder","onDblclick","_createVNode","_component_TaskComponent","onDlt"],"sourceRoot":"","sources":["C:\\Users\\Fa Dii\\Desktop\\tasklist\\src\\components\\tasksComponent.vue"],"sourcesContent":["<template >\r\n    <div class=\"tasks-div\" >\r\n        <div v-for=\"task in tasks\" :key=\"task.id\" :class=\"{remember : task.reminder, task}\" id=\"task\" @dblclick=\"$emit('toggle', task.id)\">\r\n            <TaskComponent :task=\"task\" @dlt=\"$emit('dltd',task.id)\"/>\r\n        </div>\r\n        {{ remembered }}\r\n    </div>\r\n</template>\r\n<script>\r\nimport TaskComponent from \"./taskComponent\";\r\n\r\nexport default {\r\n    name: \"TasksComponent\",\r\n    props:{\r\n        tasks: Array,\r\n    },\r\n    data(){\r\n     return{\r\n        checkMe: \"asjhdusahd\",\r\n     }\r\n    },\r\n    components:{\r\n        TaskComponent,\r\n    },\r\n    computed: {\r\n        checkthis(){\r\n          return  this.checkMe: \"Bye JEe\",\r\n        }\r\n    }\r\n    \r\n}\r\n    \r\n\r\n</script>\r\n<style scoped>\r\n  .tasks-div{\r\n        height: 460px;\r\n        overflow-y: scroll;\r\n        padding: 5px;\r\n        margin-top: 10px;\r\n        user-select: none;\r\n    }\r\n    .tasks-div::-webkit-scrollbar{\r\n        display: none;\r\n    }\r\n    .task{\r\n        padding: 5px 0px;\r\n        margin: 5px 0px;\r\n        border-radius: 10px;\r\n        background: #8686db;\r\n        color: white;\r\n    }\r\n    .remember{\r\n        border-left: 5px solid green;\r\n    }\r\n    h4{\r\n        font-weight: bold;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}