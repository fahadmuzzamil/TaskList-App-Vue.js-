{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container main-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_FormComponent = _resolveComponent(\"FormComponent\");\n  const _component_TasksComponent = _resolveComponent(\"TasksComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader, {\n    text: $data.displayMe ? 'Cancel' : 'Add Task',\n    bgColor: $data.displayMe ? 'red' : 'blue',\n    onFormDisplay: $options.display,\n    onHeightHit: $options.heightMeow\n  }, null, 8 /* PROPS */, [\"text\", \"bgColor\", \"onFormDisplay\", \"onHeightHit\"]), _withDirectives(_createElementVNode(\"div\", null, [_createVNode(_component_FormComponent, {\n    onFormData: $options.insertData\n  }, null, 8 /* PROPS */, [\"onFormData\"])], 512 /* NEED_PATCH */), [[_vShow, $data.displayMe]]), _createVNode(_component_TasksComponent, {\n    heightMe: $data.heighted,\n    tasks: $data.tasks,\n    onDltd: $options.deleteMe,\n    onToggle: $options.rememberMe\n  }, null, 8 /* PROPS */, [\"heightMe\", \"tasks\", \"onDltd\", \"onToggle\"])]);\n}","map":{"version":3,"mappings":";;EACKA,KAAK,EAAC;AAA0B;;;;;uBAArCC,oBAMQ,OANRC,UAMQ,GALLC,aAA0IC;IAA9HC,IAAI,EAAEC,eAAS;IAA0BC,OAAO,EAAED,eAAS;IAAoBE,aAAW,EAAEC,gBAAO;IAAGC,WAAS,EAAED;gGAC7HE,oBAEK,cADLR,aAAuCS;IAAvBC,UAAQ,EAAEJ;EAAU,2EADvBH,eAAS,KAGtBH,aAA2FW;IAA1EC,QAAQ,EAAET,cAAQ;IAAGU,KAAK,EAAEV,WAAK;IAAGW,MAAI,EAAER,iBAAQ;IAAGS,QAAM,EAAET","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","text","$data","bgColor","onFormDisplay","$options","onHeightHit","_createElementVNode","_component_FormComponent","onFormData","_component_TasksComponent","heightMe","tasks","onDltd","onToggle"],"sourceRoot":"","sources":["C:\\Users\\Fa Dii\\Desktop\\tasklist\\src\\App.vue"],"sourcesContent":["<template>\n<div class=\"container main-container\">\n   <AppHeader :text=\"displayMe ? 'Cancel': 'Add Task'\" :bgColor=\"displayMe ? 'red' : 'blue'\" @formDisplay=\"display\" @heightHit=\"heightMeow\"/>\n   <div v-show=\"displayMe\">\n   <FormComponent @formData=\"insertData\"/>\n  </div>\n   <TasksComponent :heightMe=\"heighted\" :tasks=\"tasks\" @dltd=\"deleteMe\" @toggle=\"rememberMe\"/>\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./components/header\";\nimport TasksComponent from \"./components/tasksComponent\";\nimport FormComponent from \"./components/addForm\";\nexport default {\n  name: 'App',\n  components: {\n    AppHeader,\n    FormComponent,\n    TasksComponent,\n  },\n  data() {\n    return {\n      tasks: Array,\n      displayMe: false,\n      heighted: false,\n    }\n  },\n  methods:{\n    display(){\n      this.displayMe = !this.displayMe\n    },\n    heightMeow(){\n       this.heighted = !this.heighted\n    },\n   async insertData(data){\n      const request = await fetch(\"api/tasks\", {\n      method: 'POST',\n      headers:{\n        'Content-type': 'application/json ',\n      },\n      body: JSON.stringify(data),\n      }) \n      const response = await request.json();\n      this.tasks.push(response);\n      this.displayMe = !this.displayMe\n    },\n   async deleteMe(id){\n        //  if(confirm(\"Are you sure? The selected task will be deleted!\")){\n          const request = await fetch(`api/tasks/${id}`,{\n            method: \"DELETE\"\n          });\n          request.status===200? this.tasks.map((task)=> task.id === id ?this.tasks.remove(id): task) : this.tasks\n        //  }\n     },\n   async rememberMe(id){\n    // const updt = this.tasks.map((task)=> task.id === id);\n    // if(updt){\n      const request= await fetch(`api/tasks/${id}`,{\n        method: \"PUT\",\n        headers:{\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(updt)\n      });\n\n      request.status === 200? console.log(\"jguu\"): console.log(\"No\")\n\n\n    // }\n    // this.tasks = this.tasks.map((task)=> task.id === id ? {...task, reminder : !task.reminder} : task );\n   },\n   //Here we are using JSON server for Fake Backend service\n   async fetchData(){\n    const request = await fetch(\"api/tasks\");\n    const response = await request.json();\n\n    return response;\n   },\n   async fetchSingleData(id){\n    const request = await fetch(`api/tasks/${id}`);\n    const response = await request.json();\n    return response;\n   }\n  },\n  async created() {\n    this.tasks = await this.fetchData();\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.main-container{\n  background: linear-gradient(to right, red, #3c598e);\n  width: 350px;\n  height: 550px;\n  border: 3px solid rgb(12, 12, 85);\n  border-radius: 10px;\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}