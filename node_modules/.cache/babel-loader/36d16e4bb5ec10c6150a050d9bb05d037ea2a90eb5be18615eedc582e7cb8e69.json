{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FormComponent = _resolveComponent(\"FormComponent\");\n  const _component_TasksComponent = _resolveComponent(\"TasksComponent\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createVNode(_component_FormComponent, {\n    onFormData: $options.insertData\n  }, null, 8 /* PROPS */, [\"onFormData\"]), [[_vShow, $data.displayMe]]), _createVNode(_component_TasksComponent, {\n    heightMe: $data.heighted,\n    tasks: $data.tasks,\n    onDltd: $options.deleteMe,\n    onToggle: $options.updateData\n  }, null, 8 /* PROPS */, [\"heightMe\", \"tasks\", \"onDltd\", \"onToggle\"])]);\n}","map":{"version":3,"mappings":";;;;uBACIA,oBAGM,8BAFFC,aAA0DC;IAAvBC,UAAQ,EAAEC;EAAU,mDAAhCC,eAAS,KAChCJ,aAA2FK;IAA1EC,QAAQ,EAAEF,cAAQ;IAAGG,KAAK,EAAEH,WAAK;IAAGI,MAAI,EAAEL,iBAAQ;IAAGM,QAAM,EAAEN","names":["_createElementBlock","_createVNode","_component_FormComponent","onFormData","$options","$data","_component_TasksComponent","heightMe","tasks","onDltd","onToggle"],"sourceRoot":"","sources":["C:\\Users\\Fa Dii\\Desktop\\tasklist\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <FormComponent v-show=\"displayMe\" @formData=\"insertData\"/>\r\n        <TasksComponent :heightMe=\"heighted\" :tasks=\"tasks\" @dltd=\"deleteMe\" @toggle=\"updateData\"/>\r\n    </div>\r\n</template>\r\n<script>\r\nimport TasksComponent from \"../components/tasksComponent\";\r\nimport FormComponent from \"../components/addForm\";\r\n\r\nexport default {\r\n    name: \"AppHome\",\r\n    components:{\r\n    FormComponent,\r\n    TasksComponent,\r\n    },\r\n    data() {\r\n    return {\r\n      tasks: Array,\r\n      displayMe: false,\r\n      heighted: false,\r\n    }\r\n  },\r\n  methods:{\r\n    display(){\r\n      this.displayMe = !this.displayMe\r\n    },\r\n    heightMeow(){\r\n       this.heighted = !this.heighted\r\n    },\r\n   async insertData(data){\r\n      const request = await fetch(\"api/tasks\", {\r\n      method: 'POST',\r\n      headers:{\r\n        'content-type': 'application/json ',\r\n      },\r\n      body: JSON.stringify(data),\r\n      }) \r\n      const response = await request.json();\r\n      this.tasks.push(response);\r\n      this.displayMe = false\r\n      this.heighted = false\r\n    },\r\n    async updateData(id){\r\n      const taskToToggle = await this.fetchSingleData(id);\r\n      const updtTask = {...taskToToggle, reminder: !taskToToggle.reminder, updatedAt: Date()};\r\n      const request = await fetch(`api/tasks/${id}`,{\r\n        method: \"PUT\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updtTask),\r\n      });\r\n      const response = await request.json();\r\n      this.tasks = this.tasks.map((task)=> task.id === id ? {...task, reminder: response.reminder}: task)\r\n   },\r\n   async deleteMe(id){\r\n         if(confirm(\"Are you sure? The selected task will be deleted!\")){\r\n          const request = await fetch(`api/tasks/${id}`,{\r\n            method: \"DELETE\"\r\n          });\r\n          request.status===200? this.tasks = this.tasks.map((task)=> task.id != id ) : this.tasks\r\n         }\r\n     },\r\n   //Here we are using JSON server for Fake Backend service\r\n   async fetchData(){\r\n    const request = await fetch(\"api/tasks\");\r\n    const response = await request.json();\r\n\r\n    return response;\r\n   },\r\n   async fetchSingleData(id){\r\n    const request = await fetch(`api/tasks/${id}`);\r\n    const response = await request.json();\r\n    return response;\r\n   }\r\n  },\r\n  async created() {\r\n    this.tasks = await this.fetchData();\r\n  }\r\n}\r\n</script>\r\n<style lang=\"\">\r\n    \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}