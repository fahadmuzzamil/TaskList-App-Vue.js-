{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TasksComponent from \"./components/tasksComponent\";\nimport FormComponent from \"./components/addForm\";\nexport default {\n  name: \"AppHome\",\n  components: {\n    FormComponent,\n    TasksComponent\n  },\n  data() {\n    return {\n      tasks: Array,\n      displayMe: false,\n      heighted: false\n    };\n  },\n  methods: {\n    display() {\n      this.displayMe = !this.displayMe;\n    },\n    heightMeow() {\n      this.heighted = !this.heighted;\n    },\n    async insertData(data) {\n      const request = await fetch(\"api/tasks\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json '\n        },\n        body: JSON.stringify(data)\n      });\n      const response = await request.json();\n      this.tasks.push(response);\n      this.displayMe = false;\n      this.heighted = false;\n    },\n    async updateData(id) {\n      const taskToToggle = await this.fetchSingleData(id);\n      const updtTask = {\n        ...taskToToggle,\n        reminder: !taskToToggle.reminder,\n        updatedAt: Date()\n      };\n      const request = await fetch(`api/tasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updtTask)\n      });\n      const response = await request.json();\n      this.tasks = this.tasks.map(task => task.id === id ? {\n        ...task,\n        reminder: response.reminder\n      } : task);\n    },\n    async deleteMe(id) {\n      if (confirm(\"Are you sure? The selected task will be deleted!\")) {\n        const request = await fetch(`api/tasks/${id}`, {\n          method: \"DELETE\"\n        });\n        request.status === 200 ? this.tasks = this.tasks.map(task => task.id != id) : this.tasks;\n      }\n    },\n    //Here we are using JSON server for Fake Backend service\n    async fetchData() {\n      const request = await fetch(\"api/tasks\");\n      const response = await request.json();\n      return response;\n    },\n    async fetchSingleData(id) {\n      const request = await fetch(`api/tasks/${id}`);\n      const response = await request.json();\n      return response;\n    }\n  },\n  async created() {\n    this.tasks = await this.fetchData();\n  }\n};","map":{"version":3,"mappings":"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","names":["TasksComponent","FormComponent","name","components","data","tasks","Array","displayMe","heighted","methods","display","heightMeow","insertData","request","fetch","method","headers","body","JSON","stringify","response","json","push","updateData","id","taskToToggle","fetchSingleData","updtTask","reminder","updatedAt","Date","map","task","deleteMe","confirm","status","fetchData","created"],"sourceRoot":"","sources":["C:\\Users\\Fa Dii\\Desktop\\tasklist\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <FormComponent v-show=\"displayMe\" @formData=\"insertData\"/>\r\n        <TasksComponent :heightMe=\"heighted\" :tasks=\"tasks\" @dltd=\"deleteMe\" @toggle=\"updateData\"/>\r\n    </div>\r\n</template>\r\n<script>\r\nimport TasksComponent from \"./components/tasksComponent\";\r\nimport FormComponent from \"./components/addForm\";\r\n\r\nexport default {\r\n    name: \"AppHome\",\r\n    components:{\r\n    FormComponent,\r\n    TasksComponent,\r\n    },\r\n    data() {\r\n    return {\r\n      tasks: Array,\r\n      displayMe: false,\r\n      heighted: false,\r\n    }\r\n  },\r\n  methods:{\r\n    display(){\r\n      this.displayMe = !this.displayMe\r\n    },\r\n    heightMeow(){\r\n       this.heighted = !this.heighted\r\n    },\r\n   async insertData(data){\r\n      const request = await fetch(\"api/tasks\", {\r\n      method: 'POST',\r\n      headers:{\r\n        'content-type': 'application/json ',\r\n      },\r\n      body: JSON.stringify(data),\r\n      }) \r\n      const response = await request.json();\r\n      this.tasks.push(response);\r\n      this.displayMe = false\r\n      this.heighted = false\r\n    },\r\n    async updateData(id){\r\n      const taskToToggle = await this.fetchSingleData(id);\r\n      const updtTask = {...taskToToggle, reminder: !taskToToggle.reminder, updatedAt: Date()};\r\n      const request = await fetch(`api/tasks/${id}`,{\r\n        method: \"PUT\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updtTask),\r\n      });\r\n      const response = await request.json();\r\n      this.tasks = this.tasks.map((task)=> task.id === id ? {...task, reminder: response.reminder}: task)\r\n   },\r\n   async deleteMe(id){\r\n         if(confirm(\"Are you sure? The selected task will be deleted!\")){\r\n          const request = await fetch(`api/tasks/${id}`,{\r\n            method: \"DELETE\"\r\n          });\r\n          request.status===200? this.tasks = this.tasks.map((task)=> task.id != id ) : this.tasks\r\n         }\r\n     },\r\n   //Here we are using JSON server for Fake Backend service\r\n   async fetchData(){\r\n    const request = await fetch(\"api/tasks\");\r\n    const response = await request.json();\r\n\r\n    return response;\r\n   },\r\n   async fetchSingleData(id){\r\n    const request = await fetch(`api/tasks/${id}`);\r\n    const response = await request.json();\r\n    return response;\r\n   }\r\n  },\r\n  async created() {\r\n    this.tasks = await this.fetchData();\r\n  }\r\n}\r\n</script>\r\n<style lang=\"\">\r\n    \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}